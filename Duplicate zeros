


class Solution:
    def duplicateZeros(self, arr: List[int]) -> None:
        """
        Do not return anything, modify arr in-place instead.
        """
        left, possible_dups, len_ = 0, 0, len(arr)-1
        i = 0
        while i<len_-possible_dups:
            if arr[i]==0:
                possible_dups += 1
            if i==len_-possible_dups:
                # flag =1 says we consider len_-possible_dups element for duplication, it is surely 0
                # that's the reason i == len_-possible_dups
                flag = 1
            else:
                flag = 0
                # not considering len_-possible_dups element if it's 0 for duplication
            i += 1
        print(possible_dups, len_-possible_dups)
        if possible_dups<len_-possible_dups and flag==0:
            # last element if 0 or not zero when not considered is simply copied to the len(arr)-1 index of arr
            arr[len_] = arr[len_-possible_dups]
            len_ = len_-1
        j = len_-possible_dups
        while j>=0 and possible_dups>0:
            if arr[j]!=0:
                arr[j+possible_dups] = arr[j]
            else:
                arr[j+possible_dups] = arr[j] # or 0
                possible_dups -= 1
                arr[j+possible_dups] = arr[j]
            j -= 1
